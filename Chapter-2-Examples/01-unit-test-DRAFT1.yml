name: Solar System Workflow 
on : 
  workflow_dispatch: 
  push: 
    branches: 
      - main 
      - 'feature/*' 
      
env: 
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO PASSWORD: ${{ secrets.MONGO_PASSWORD }} 
  
  
jobs: 
  unit-testing:
      name: Unit Testing 
      strategy:
         matrix:
           nodejs_version: [18, 19, 20]
           operating_system: [ubuntu-latest, macos-latest]
           exclude:
             - nodejs_version: 18
               operating_system: macos-latest

      runs-on: ${{ matrix.operating_system }}
      steps: 
      - name: Checkout Repository 
        uses: actions/checkout@v4 

      - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3 
        with: 
          node-version: ${{ matrix.nodejs_version }}

      # An example of caches dependencies 
      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          # Folder where dependencies are located 
          path: ~/.npm
          # Hash for file so if cache changes dependency loaded will also change 
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }} 

        
      # If cache is setup as above it will automatically be used. 
      - name: Install Dependencies 
        run: npm install 
        
      - name: Unit Testing 
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive Test Result 
        if: always() # we could run this always in case of npm test failure 
        # if: success() #applied by DEFAULT!
        # if: failure() # 
        # if: failure() && steps.nodejs-unit-testing-step.outcome == 'failure' ||  steps.nodejs-units.testing.step.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  code-coverage: 
      name: Code Coverage
      runs-on: ubuntu-latest 
      steps: 
      - name: Checkout Repository 
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - 18 
        uses: actions/setup-node@v3 
        with: 
          node-version: 18 

      - name: Install Dependencies 
        run: npm install 

      - name: Check Code Coverage
        continue-on-error: true 
        run: npm run coverage 

      - name: Archive Test Result 
        uses: actions/upload-artifact@v3 
        with: 
          name: Code-Coverage-Result 
          path: coverage 
          retention-days: 5

  docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      # Below permissions are to allow write to GHCR
      permissions: 
        packages: write
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dockerhub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: GHCR Login
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      # Builds the image locally on the runner for testing 
      - name: Docker Build for Testing
        uses: docker/build-push-action@v4
        with:
          context: . 
          push: false
          tag: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Docker Image Testing
        run: |
          docker images
          docker run --name solar-system-app -d \
          -p 3000:3000 \
          -e MONGO_URI=$MONGO_URI \
          -e MONGO_PASSWORD=$MONGO_PASSWORD \
          ${{ env.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          echo Testing Image URL using wget
          wget -q -O - 127.0.0.1:3000/live | grep live 

      # Build and pushes the image to docker hub && GHCR 
      - name: Docker Build for Testing
        uses: docker/build-push-action@v4
        with:
          context: . 
          push: true
          tag: | 
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            ghcro.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}       
